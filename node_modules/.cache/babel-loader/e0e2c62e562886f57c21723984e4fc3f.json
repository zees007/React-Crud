{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhmdz\\\\IdeaProjects\\\\React Projects\\\\reactdemo\\\\src\\\\components\\\\Achievement.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport { faPlusSquare, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport Col from \"react-bootstrap/Col\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons/faSave\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nexport default class Achievement extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 34\n      }\n    }), \" \", this.state.id ? \"Update Student\" : \"Add New Student\", \" \"), /*#__PURE__*/React.createElement(Form, {\n      id: \"bookFormId\",\n      onSubmit: this.state.id ? this.updateStudent : this.submitStudentForm,\n      onReset: this.resetStudentForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSerial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 37\n      }\n    }, \"Achievement Year Heading\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Achievement year...\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: serial,\n      onChange: this.bookChange,\n      name: \"serial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridFullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 37\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Full Name..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\" // value={this.state.fullname}   you can write like this if doesn't initialize the const {serial, username, password, fullname, email, contact} = this.state;\n      ,\n      value: fullname,\n      onChange: this.bookChange,\n      name: \"fullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, \"USERNAME\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Username..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: username,\n      onChange: this.bookChange,\n      name: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, \"PASSWORD\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Enter Password..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: password,\n      onChange: this.bookChange,\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }, \"EMAIL\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter Email..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: email,\n      onChange: this.bookChange,\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridContact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, \"CONTACT\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Contact..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: contact,\n      onChange: this.bookChange,\n      name: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }), \" Reset\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"button\",\n      onClick: this.bookList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }), \" Book List\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mhmdz/IdeaProjects/React Projects/reactdemo/src/components/Achievement.js"],"names":["React","Component","Button","Card","Form","FontAwesomeIcon","faEdit","faPlusSquare","faUndo","Col","faSave","faList","Achievement","render","state","id","updateStudent","submitStudentForm","resetStudentForm","serial","bookChange","fullname","username","password","email","contact","textAlign","bookList","bind"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\r\nimport {faPlusSquare, faUndo} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons/faSave\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\n\r\n\r\n\r\nexport default class Achievement extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header><FontAwesomeIcon icon={this.state.id ? faEdit:faPlusSquare}/> {this.state.id ? \"Update Student\":\"Add New Student\"} </Card.Header>\r\n                    <Form id=\"bookFormId\" onSubmit={this.state.id ? this.updateStudent : this.submitStudentForm} onReset={this.resetStudentForm}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridSerial\">\r\n                                    <Form.Label>Achievement Year Heading</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Achievement year...\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={serial}\r\n                                                  onChange={this.bookChange}\r\n                                                  name=\"serial\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridFullname\">\r\n                                    <Form.Label>Full Name</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Full Name..\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                        // value={this.state.fullname}   you can write like this if doesn't initialize the const {serial, username, password, fullname, email, contact} = this.state;\r\n                                                  value={fullname}\r\n                                                  onChange={this.bookChange}\r\n                                                  name=\"fullname\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridUsername\">\r\n                                    <Form.Label>USERNAME</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Username..\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={username}\r\n                                                  onChange={this.bookChange}\r\n                                                  name=\"username\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                    <Form.Label>PASSWORD</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Enter Password..\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={password}\r\n                                                  onChange={this.bookChange}\r\n                                                  name=\"password\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                    <Form.Label>EMAIL</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter Email..\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={email}\r\n                                                  onChange={this.bookChange}\r\n                                                  name=\"email\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridContact\">\r\n                                    <Form.Label>CONTACT</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Contact..\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={contact}\r\n                                                  onChange={this.bookChange}\r\n                                                  name=\"contact\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                        </Card.Body>\r\n                        <Card.Footer style={{textAlign: \"right\"}}>\r\n                            <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave}/> {this.state.id ? \"Update\":\"Save\"}\r\n                            </Button>{' '}\r\n                            <Button size=\"sm\" variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo}/> Reset\r\n                            </Button>{' '}\r\n                            <Button size=\"sm\" variant=\"success\" type=\"button\" onClick={this.bookList.bind()}>\r\n                                <FontAwesomeIcon icon={faList}/> Book List\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}