{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhmdz\\\\IdeaProjects\\\\React Projects\\\\reactdemo\\\\src\\\\components\\\\Book.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport { faPlusSquare, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons/faSave\";\nimport StudentRegisteredService from \"../services/StudentRegisteredService\";\nimport MyToast from \"../helper/MyToast\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons/faEdit\";\nexport default class Book extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      serial: '',\n      fullname: '',\n      username: '',\n      password: '',\n      email: '',\n      contact: ''\n    };\n\n    this.findOneRegistrationForEdit = studentId => {\n      StudentRegisteredService.updateStudentRegistration(studentId).then(response => {\n        if (response.data != null) {\n          this.setState({\n            id: response.data.id,\n            serial: response.data.serial,\n            fullname: response.data.fullname,\n            username: response.data.username,\n            password: response.data.password,\n            email: response.data.email,\n            contact: response.data.contact\n          });\n        }\n      }).catch(error => {\n        console.log(\"Error -\" + error);\n      });\n    };\n\n    this.submitStudentForm = event => {\n      event.preventDefault();\n      const studentRegistered = {\n        serial: this.state.serial,\n        fullname: this.state.fullname,\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        contact: this.state.contact\n      };\n      StudentRegisteredService.createStudentRegistration(studentRegistered).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          });\n          setTimeout(() => this.setState({\n            \"show\": false\n          }), 3000);\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      });\n      this.setState(this.initialState);\n    };\n\n    this.updateStudent = event => {\n      const studentRegistered1 = {\n        id: this.state.id,\n        serial: this.state.serial,\n        fullname: this.state.fullname,\n        username: this.state.username,\n        password: this.state.password,\n        email: this.state.email,\n        contact: this.state.contact\n      };\n      StudentRegisteredService.createStudentRegistration(studentRegistered1).then(response => {\n        if (response.data != null) {\n          this.setState({\n            \"show\": true\n          }); //setTimeout(() => this.setState({\"show\": false}), 3000)\n          //setTimeout(() => this.bookList({\"show\": false}), 3000)\n        } else {\n          this.setState({\n            \"show\": false\n          });\n        }\n      }); //this.setState(this.initialState)\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.resetStudentForm = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n\n    this.state = this.initialState;\n    this.bookChange = this.bookChange.bind(this);\n    this.submitStudentForm = this.submitStudentForm.bind(this);\n    this.state.show = false;\n  }\n\n  componentDidMount() {\n    const studentId = +this.props.match.params.id; //special code to get the id in current file for edit\n\n    if (studentId) {\n      this.findOneRegistrationForEdit(studentId);\n    }\n  }\n\n  render() {\n    const {\n      serial,\n      username,\n      password,\n      fullname,\n      email,\n      contact\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": this.state.show ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MyToast, {\n      show: this.state.show,\n      message: \"Student saved successully..!!\",\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 38\n      }\n    }), \" \", this.state.id ? \"Update Student\" : \"Add New Student\", \" \"), /*#__PURE__*/React.createElement(Form, {\n      id: \"bookFormId\",\n      onSubmit: this.state.id ? this.updateStudent : this.submitStudentForm,\n      onReset: this.resetStudentForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridSerial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 41\n      }\n    }, \"Serial\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Serial Number..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: serial,\n      onChange: this.bookChange,\n      name: \"serial\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridFullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 41\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Full Name..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\" // value={this.state.fullname}   you can write like this if doesn't initialize the const {serial, username, password, fullname, email, contact} = this.state;\n      ,\n      value: fullname,\n      onChange: this.bookChange,\n      name: \"fullname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 41\n      }\n    }, \"USERNAME\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Username..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: username,\n      onChange: this.bookChange,\n      name: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }\n    }, \"PASSWORD\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Enter Password..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: password,\n      onChange: this.bookChange,\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }\n    }, \"EMAIL\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter Email..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: email,\n      onChange: this.bookChange,\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridContact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 41\n      }\n    }, \"CONTACT\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Contact..\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: contact,\n      onChange: this.bookChange,\n      name: \"contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }), \" \", this.state.id ? \"Update\" : \"Save\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }), \" Reset\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"button\",\n      onClick: this.bookList.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }), \" Book List\"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mhmdz/IdeaProjects/React Projects/reactdemo/src/components/Book.js"],"names":["React","Component","Button","Card","Form","Col","faPlusSquare","faUndo","FontAwesomeIcon","faSave","StudentRegisteredService","MyToast","faList","faEdit","Book","constructor","props","initialState","id","serial","fullname","username","password","email","contact","findOneRegistrationForEdit","studentId","updateStudentRegistration","then","response","data","setState","catch","error","console","log","submitStudentForm","event","preventDefault","studentRegistered","state","createStudentRegistration","setTimeout","updateStudent","studentRegistered1","bookChange","target","name","value","resetStudentForm","bookList","history","push","bind","show","componentDidMount","match","params","render","textAlign"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {faPlusSquare, faUndo} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons/faSave\";\r\nimport StudentRegisteredService from \"../services/StudentRegisteredService\";\r\nimport MyToast from \"../helper/MyToast\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\r\n\r\n\r\nexport default class Book extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.bookChange = this.bookChange.bind(this);\r\n        this.submitStudentForm = this.submitStudentForm.bind(this);\r\n\r\n        this.state.show = false;\r\n    }\r\n\r\n    initialState = {\r\n        id: '', serial: '', fullname: '', username: '', password: '', email: '', contact: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const studentId = +this.props.match.params.id; //special code to get the id in current file for edit\r\n        if (studentId) {\r\n            this.findOneRegistrationForEdit(studentId);\r\n        }\r\n    }\r\n\r\n    findOneRegistrationForEdit = (studentId) => {\r\n        StudentRegisteredService.updateStudentRegistration(studentId)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({\r\n                        id: response.data.id,\r\n                        serial: response.data.serial,\r\n                        fullname: response.data.fullname,\r\n                        username: response.data.username,\r\n                        password: response.data.password,\r\n                        email: response.data.email,\r\n                        contact: response.data.contact\r\n                    });\r\n                }\r\n\r\n            }).catch((error) => {\r\n            console.log(\"Error -\" + error);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    submitStudentForm = event => {\r\n        event.preventDefault();\r\n        const studentRegistered = {\r\n            serial: this.state.serial,\r\n            fullname: this.state.fullname,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            contact: this.state.contact\r\n        }\r\n\r\n        StudentRegisteredService.createStudentRegistration(studentRegistered)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({\"show\": true})\r\n                    setTimeout(() => this.setState({\"show\": false}), 3000)\r\n                } else {\r\n                    this.setState({\"show\": false})\r\n                }\r\n            })\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    updateStudent = (event) => {\r\n        const studentRegistered1 = {\r\n            id: this.state.id,\r\n            serial: this.state.serial,\r\n            fullname: this.state.fullname,\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            contact: this.state.contact\r\n        }\r\n\r\n        StudentRegisteredService.createStudentRegistration(studentRegistered1)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    this.setState({\"show\": true})\r\n                    //setTimeout(() => this.setState({\"show\": false}), 3000)\r\n                    //setTimeout(() => this.bookList({\"show\": false}), 3000)\r\n                } else {\r\n                    this.setState({\"show\": false})\r\n                }\r\n            })\r\n        //this.setState(this.initialState)\r\n    }\r\n\r\n    bookChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    resetStudentForm = () => {\r\n        this.setState(() => this.initialState)\r\n    }\r\n\r\n    bookList = () => {\r\n        return this.props.history.push(\"/list\");\r\n    }\r\n\r\n    render() {\r\n\r\n        const {serial, username, password, fullname, email, contact} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div style={{\"display\": this.state.show ? \"block\" : \"none\"}}>\r\n                        <MyToast show={this.state.show} message={\"Student saved successully..!!\"} type={\"success\"}/>\r\n                    </div>\r\n                    <Card className={\"border border-dark bg-dark text-white\"}>\r\n                        <Card.Header><FontAwesomeIcon icon={this.state.id ? faEdit:faPlusSquare}/> {this.state.id ? \"Update Student\":\"Add New Student\"} </Card.Header>\r\n                        <Form id=\"bookFormId\" onSubmit={this.state.id ? this.updateStudent : this.submitStudentForm} onReset={this.resetStudentForm}>\r\n                            <Card.Body>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridSerial\">\r\n                                        <Form.Label>Serial</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Enter Serial Number..\" required\r\n                                                      className={\"bg-dark text-white\"}\r\n                                                      autoComplete=\"off\"\r\n                                                      value={serial}\r\n                                                      onChange={this.bookChange}\r\n                                                      name=\"serial\"/>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridFullname\">\r\n                                        <Form.Label>Full Name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Enter Full Name..\" required\r\n                                                      className={\"bg-dark text-white\"}\r\n                                                      autoComplete=\"off\"\r\n                                            // value={this.state.fullname}   you can write like this if doesn't initialize the const {serial, username, password, fullname, email, contact} = this.state;\r\n                                                      value={fullname}\r\n                                                      onChange={this.bookChange}\r\n                                                      name=\"fullname\"/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridUsername\">\r\n                                        <Form.Label>USERNAME</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Enter Username..\" required\r\n                                                      className={\"bg-dark text-white\"}\r\n                                                      autoComplete=\"off\"\r\n                                                      value={username}\r\n                                                      onChange={this.bookChange}\r\n                                                      name=\"username\"/>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                        <Form.Label>PASSWORD</Form.Label>\r\n                                        <Form.Control type=\"password\" placeholder=\"Enter Password..\" required\r\n                                                      className={\"bg-dark text-white\"}\r\n                                                      autoComplete=\"off\"\r\n                                                      value={password}\r\n                                                      onChange={this.bookChange}\r\n                                                      name=\"password\"/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                                        <Form.Label>EMAIL</Form.Label>\r\n                                        <Form.Control type=\"email\" placeholder=\"Enter Email..\" required\r\n                                                      className={\"bg-dark text-white\"}\r\n                                                      autoComplete=\"off\"\r\n                                                      value={email}\r\n                                                      onChange={this.bookChange}\r\n                                                      name=\"email\"/>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} controlId=\"formGridContact\">\r\n                                        <Form.Label>CONTACT</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Enter Contact..\" required\r\n                                                      className={\"bg-dark text-white\"}\r\n                                                      autoComplete=\"off\"\r\n                                                      value={contact}\r\n                                                      onChange={this.bookChange}\r\n                                                      name=\"contact\"/>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n\r\n                            </Card.Body>\r\n                            <Card.Footer style={{textAlign: \"right\"}}>\r\n                                <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                                    <FontAwesomeIcon icon={faSave}/> {this.state.id ? \"Update\":\"Save\"}\r\n                                </Button>{' '}\r\n                                <Button size=\"sm\" variant=\"info\" type=\"reset\">\r\n                                    <FontAwesomeIcon icon={faUndo}/> Reset\r\n                                </Button>{' '}\r\n                                <Button size=\"sm\" variant=\"success\" type=\"button\" onClick={this.bookList.bind()}>\r\n                                    <FontAwesomeIcon icon={faList}/> Book List\r\n                                </Button>\r\n                            </Card.Footer>\r\n                        </Form>\r\n                    </Card>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}