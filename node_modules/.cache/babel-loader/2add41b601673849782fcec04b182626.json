{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhmdz\\\\IdeaProjects\\\\React Projects\\\\reactdemo\\\\src\\\\components\\\\Achievement.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons/faEdit\";\nimport { faPlusSquare, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport Col from \"react-bootstrap/Col\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons/faSave\";\nimport { faList } from \"@fortawesome/free-solid-svg-icons/faList\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons/faPlus\";\nimport TaskList from \"./TaskList\";\nimport StudentRegisteredService from \"../services/StudentRegisteredService\";\nexport default class Achievement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskList: [{\n        index: Math.random(),\n        achievementPara: \"\"\n      }],\n      achievementYearHeading: \"\",\n      achievementImage: \"\"\n    };\n\n    this.handleChange = e => {\n      if ([\"achievementPara\"].includes(e.target.name)) {\n        let taskList = [...this.state.taskList];\n        taskList[e.target.dataset.id][e.target.name] = e.target.value;\n      } else {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      }\n    };\n\n    this.addNewRow = e => {\n      this.setState(prevState => ({\n        taskList: [...prevState.taskList, {\n          index: Math.random(),\n          achievementPara: \"\"\n        }]\n      }));\n    };\n\n    this.deleteRow = index => {\n      this.setState({\n        taskList: this.state.taskList.filter((s, sindex) => index !== sindex)\n      });\n    };\n  }\n\n  //handleSubmit = (e) => {\n  // e.preventDefault();\n  // const achievementData = {\n  //     achievementYearHeading: this.state.achievementYearHeading,\n  //     fullname: this.state.fullname,\n  //     username: this.state.username,\n  //     password: this.state.password,\n  //     email: this.state.email,\n  //     contact: this.state.contact\n  // }\n  //\n  // axios.post(\"http://localhost:8080/achievement/save\", data)\n  clickOnDelete(record) {\n    this.setState({\n      taskList: this.state.taskList.filter(r => r !== record)\n    });\n  }\n\n  onUploadImage(e) {\n    let files = e.target.files;\n    console.log(files);\n    StudentRegisteredService.uploadFile(formData).then(response => {\n      console.log(response);\n    });\n  }\n\n  render() {\n    let {\n      taskList\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Add Achievements\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridachievementYearHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    }, \"Achievement Year Heading\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Achievement year...\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      name: \"achievementYearHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridachievementImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, \"Upload Achievement Image\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"file\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      onChange: e => this.onUploadImage(e),\n      name: \"achievementImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, \"Enter Achievement Points\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      add: this.addNewRow,\n      delete: this.clickOnDelete.bind(this),\n      taskList: taskList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mhmdz/IdeaProjects/React Projects/reactdemo/src/components/Achievement.js"],"names":["React","Component","Button","Card","Form","FontAwesomeIcon","faEdit","faPlusSquare","faUndo","Col","faSave","faList","faPlus","TaskList","StudentRegisteredService","Achievement","state","taskList","index","Math","random","achievementPara","achievementYearHeading","achievementImage","handleChange","e","includes","target","name","dataset","id","value","setState","addNewRow","prevState","deleteRow","filter","s","sindex","clickOnDelete","record","r","onUploadImage","files","console","log","uploadFile","formData","then","response","render","handleSubmit","bind"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Form} from \"react-bootstrap\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons/faEdit\";\r\nimport {faPlusSquare, faUndo} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport {faSave} from \"@fortawesome/free-solid-svg-icons/faSave\";\r\nimport {faList} from \"@fortawesome/free-solid-svg-icons/faList\";\r\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons/faPlus\";\r\nimport TaskList from \"./TaskList\";\r\nimport StudentRegisteredService from \"../services/StudentRegisteredService\";\r\n\r\n\r\n\r\nexport default class Achievement extends Component {\r\n    imageId;\r\n\r\n    state ={\r\n        taskList: [{index: Math.random(), achievementPara:\"\"}],\r\n        achievementYearHeading:\"\",\r\n        achievementImage:\"\",\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        if([\"achievementPara\"].includes(e.target.name)){\r\n            let taskList = [...this.state.taskList]\r\n            taskList[e.target.dataset.id][e.target.name] = e.target.value;\r\n        } else {\r\n            this.setState({[e.target.name]: e.target.value})\r\n        }\r\n    }\r\n\r\n    addNewRow = (e) => {\r\n        this.setState((prevState) => ({\r\n            taskList: [...prevState.taskList, {index: Math.random(), achievementPara: \"\"}]\r\n        }));\r\n    }\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            taskList: this.state.taskList.filter((s, sindex) => index !== sindex),\r\n        });\r\n    }\r\n\r\n    //handleSubmit = (e) => {\r\n        // e.preventDefault();\r\n        // const achievementData = {\r\n        //     achievementYearHeading: this.state.achievementYearHeading,\r\n        //     fullname: this.state.fullname,\r\n        //     username: this.state.username,\r\n        //     password: this.state.password,\r\n        //     email: this.state.email,\r\n        //     contact: this.state.contact\r\n        // }\r\n        //\r\n        // axios.post(\"http://localhost:8080/achievement/save\", data)\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            taskList: this.state.taskList.filter(r=> r!==record)\r\n        })\r\n    }\r\n    onUploadImage(e){\r\n        let files = e.target.files;\r\n        console.log(files)\r\n        StudentRegisteredService.uploadFile(formData)\r\n            .then(response =>{\r\n                console.log(response)\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        let {taskList} = this.state\r\n        return (\r\n            <div className=\"content\">\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header>Add Achievements</Card.Header>\r\n                    <Form onSubmit={this.handleSubmit} onChange={this.handleChange}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridachievementYearHeading\">\r\n                                    <Form.Label>Achievement Year Heading</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Achievement year...\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  name=\"achievementYearHeading\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridachievementImage\">\r\n                                    <Form.Label>Upload Achievement Image</Form.Label>\r\n                                    <Form.Control type=\"file\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  onChange={(e) => this.onUploadImage(e)}\r\n                                                  name=\"achievementImage\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Enter Achievement Points</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <TaskList add={this.addNewRow} delete={this.clickOnDelete.bind(this)} taskList={taskList}/>\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button size=\"sm\" variant=\"success\" type=\"submit\">Submit\r\n                            </Button>\r\n\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}