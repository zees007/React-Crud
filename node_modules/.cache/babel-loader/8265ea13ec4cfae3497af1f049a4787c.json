{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhmdz\\\\IdeaProjects\\\\React Projects\\\\React-Crud\\\\reactdemo\\\\src\\\\components\\\\Achievement.js\";\nimport React, { Component } from \"react\";\nimport { Button, Card, Dropdown, Form } from \"react-bootstrap\";\nimport Col from \"react-bootstrap/Col\";\nimport TaskList from \"./TaskList\";\nimport StudentRegisteredService from \"../services/StudentRegisteredService\";\nexport default class Achievement extends Component {\n  constructor(props) {\n    super(props);\n    this.istate = {\n      id: '',\n      achievementYearHeading: '',\n      achievementImage: '',\n      taskList: [{\n        index: Math.random(),\n        achievementScores: []\n      }]\n    };\n    this.state = {\n      id: '',\n      name: '',\n      description: '',\n      category: ''\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const achievementData = {\n        achievementYearHeading: this.state.achievementYearHeading,\n        achievementImage: {\n          id: this.imageId\n        },\n        achievementScores: this.state.taskList\n      };\n      StudentRegisteredService.createAchievement(achievementData).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(\"Error:- \" + error);\n      });\n    };\n\n    this.handleSubmitParty = e => {\n      e.preventDefault();\n      const partyData = {\n        name: this.state.name,\n        category: {\n          id: this.imageId\n        },\n        description: this.state.description\n      };\n      StudentRegisteredService.createParty(partyData).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(\"Error:- \" + error);\n      });\n    };\n\n    this.addNewRow = () => {\n      this.setState(prevState => ({\n        taskList: [...prevState.taskList, {\n          index: Math.random(),\n          achievementPara: \"\"\n        }]\n      }));\n    };\n\n    this.deleteRow = index => {\n      this.setState({\n        taskList: this.state.taskList.filter((s, sindex) => index !== sindex)\n      });\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeParty = this.handleChangeParty.bind(this);\n    this.handleChangeParty = this.handleChangeParty.bind(this);\n  }\n\n  handleChange(e) {\n    if ([\"achievementPara\"].includes(e.target.name)) {\n      let taskList = [...this.state.taskList];\n      taskList[e.target.dataset.id][e.target.name] = e.target.value;\n      console.log(e.target.value);\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    }\n  }\n\n  handleChangeParty(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  clickOnDelete(record) {\n    this.setState({\n      taskList: this.state.taskList.filter(r => r !== record)\n    });\n  }\n\n  onUploadImage(e) {\n    let image = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', image);\n    StudentRegisteredService.uploadFile(formData).then(response => {\n      if (response) {\n        this.imageId = response.data.id;\n        console.log(this.imageId);\n      }\n    });\n  }\n\n  render() {\n    const {\n      achievementYearHeading,\n      achievementImage,\n      taskList\n    } = this.state;\n    const {\n      name,\n      description,\n      category\n    } = this.istate;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, \"Add Achievements\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridachievementYearHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, \"Achievement Year Heading\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Achievement year...\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: achievementYearHeading,\n      onChange: this.handleChange,\n      name: \"achievementYearHeading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridachievementImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, \"Upload Achievement Image\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"file\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: achievementImage,\n      onChange: e => this.onUploadImage(e) // onChange={this.twoMethod}\n      ,\n      name: \"achievementImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \"Enter Achievement Points\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TaskList, {\n      add: this.addNewRow,\n      delete: this.clickOnDelete.bind(this),\n      taskList: taskList,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, \"Add Party\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmitParty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, \"Party Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter name ...\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: this.handleChangeParty,\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, \"Party Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter description year...\",\n      required: true,\n      className: \"bg-dark text-white\",\n      autoComplete: \"off\",\n      value: description,\n      onChange: this.handleChangeParty,\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, \"Select Category\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      onChange: this.handleChangeParty,\n      name: \"category\",\n      value: category,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 37\n      }\n    }, \"AR1\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }, \"AR2\")))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 29\n      }\n    }, \"Submit\")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mhmdz/IdeaProjects/React Projects/React-Crud/reactdemo/src/components/Achievement.js"],"names":["React","Component","Button","Card","Dropdown","Form","Col","TaskList","StudentRegisteredService","Achievement","constructor","props","istate","id","achievementYearHeading","achievementImage","taskList","index","Math","random","achievementScores","state","name","description","category","handleSubmit","e","preventDefault","achievementData","imageId","createAchievement","then","response","console","log","catch","error","handleSubmitParty","partyData","createParty","addNewRow","setState","prevState","achievementPara","deleteRow","filter","s","sindex","bind","handleChange","handleChangeParty","includes","target","dataset","value","event","clickOnDelete","record","r","onUploadImage","image","files","formData","FormData","append","uploadFile","data","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Card, Dropdown, Form} from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TaskList from \"./TaskList\";\r\nimport StudentRegisteredService from \"../services/StudentRegisteredService\";\r\n\r\nexport default class Achievement extends Component {\r\n    imageId;\r\n    categoryId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeParty = this.handleChangeParty.bind(this)\r\n        this.handleChangeParty = this.handleChangeParty.bind(this)\r\n    }\r\n\r\n\r\n    istate = {\r\n        id: '', achievementYearHeading: '', achievementImage: '',\r\n        taskList: [{\r\n            index: Math.random(),\r\n            achievementScores: []\r\n        }]\r\n    };\r\n\r\n    state = {\r\n        id:'', name:'', description:'', category:''\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const achievementData = {\r\n            achievementYearHeading: this.state.achievementYearHeading,\r\n            achievementImage: {\r\n                id: this.imageId\r\n            },\r\n            achievementScores: this.state.taskList\r\n        };\r\n\r\n        StudentRegisteredService.createAchievement(achievementData)\r\n            .then(response => {\r\n                console.log(response)\r\n            }).catch(error => {\r\n            console.log(\"Error:- \" + error)\r\n        })\r\n    };\r\n\r\n    handleSubmitParty = (e) => {\r\n        e.preventDefault();\r\n        const partyData = {\r\n            name: this.state.name,\r\n            category: {\r\n                id: this.imageId\r\n            },\r\n            description: this.state.description\r\n        };\r\n\r\n        StudentRegisteredService.createParty(partyData)\r\n            .then(response => {\r\n                console.log(response)\r\n            }).catch(error => {\r\n            console.log(\"Error:- \" + error)\r\n        })\r\n    };\r\n\r\n\r\n    handleChange(e) {\r\n        if ([\"achievementPara\"].includes(e.target.name)) {\r\n            let taskList = [...this.state.taskList];\r\n            taskList[e.target.dataset.id][e.target.name] = e.target.value;\r\n            console.log(e.target.value)\r\n        } else {\r\n            this.setState({[e.target.name]: e.target.value})\r\n        }\r\n    }\r\n\r\n    handleChangeParty(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    addNewRow = () => {\r\n        this.setState((prevState) => ({\r\n            taskList: [...prevState.taskList, {index: Math.random(), achievementPara: \"\"}]\r\n        }));\r\n    };\r\n\r\n    deleteRow = (index) => {\r\n        this.setState({\r\n            taskList: this.state.taskList.filter((s, sindex) => index !== sindex),\r\n        });\r\n    };\r\n\r\n\r\n    clickOnDelete(record) {\r\n        this.setState({\r\n            taskList: this.state.taskList.filter(r => r !== record)\r\n        })\r\n    }\r\n\r\n    onUploadImage(e) {\r\n        let image = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('file', image);\r\n        StudentRegisteredService.uploadFile(formData)\r\n            .then(response => {\r\n                if (response) {\r\n                    this.imageId = response.data.id;\r\n                    console.log(this.imageId)\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {achievementYearHeading, achievementImage, taskList} = this.state;\r\n        const {name, description, category} =this.istate\r\n\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header>Add Achievements</Card.Header>\r\n                    <Form onSubmit={this.handleSubmit} onChange={this.handleChange}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridachievementYearHeading\">\r\n                                    <Form.Label>Achievement Year Heading</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter Achievement year...\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={achievementYearHeading}\r\n                                                  onChange={this.handleChange}\r\n                                                  name=\"achievementYearHeading\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridachievementImage\">\r\n                                    <Form.Label>Upload Achievement Image</Form.Label>\r\n                                    <Form.Control type=\"file\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={achievementImage}\r\n                                                  onChange={(e) => this.onUploadImage(e)}\r\n                                        // onChange={this.twoMethod}\r\n                                                  name=\"achievementImage\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Enter Achievement Points</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n\r\n\r\n                                <TaskList add={this.addNewRow} delete={this.clickOnDelete.bind(this)}\r\n                                          taskList={taskList} onChange={this.handleChange}/>\r\n\r\n\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button size=\"sm\" variant=\"success\" type=\"submit\">Submit\r\n                            </Button>\r\n\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n                <br/>\r\n\r\n                <Card className={\"border border-dark bg-dark text-white\"}>\r\n                    <Card.Header>Add Party</Card.Header>\r\n                    <Form onSubmit={this.handleSubmitParty}>\r\n                        <Card.Body>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formGridName\">\r\n                                    <Form.Label>Party Name</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter name ...\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={name}\r\n                                                  onChange={this.handleChangeParty}\r\n                                                  name=\"name\"/>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} controlId=\"formGridDescription\">\r\n                                    <Form.Label>Party Description</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter description year...\" required\r\n                                                  className={\"bg-dark text-white\"}\r\n                                                  autoComplete=\"off\"\r\n                                                  value={description}\r\n                                                  onChange={this.handleChangeParty}\r\n                                                  name=\"description\"/>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                                    Select Category\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu onChange={this.handleChangeParty} name=\"category\" value={category}>\r\n                                    <Dropdown.Item href=\"#/action-1\" value=\"1\">AR1</Dropdown.Item>\r\n                                    <Dropdown.Item href=\"#/action-2\" value=\"2\">AR2</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <Button size=\"sm\" variant=\"success\" type=\"submit\">Submit\r\n                            </Button>\r\n                        </Card.Footer>\r\n                    </Form>\r\n                </Card>\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}